!function(t){function e(i){if(s[i])return s[i].exports;var n=s[i]={exports:{},id:i,loaded:!1};return t[i].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var s={};return e.m=t,e.c=s,e.p="",e(0)}([function(t,e,s){"use strict";if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");s(11),s(8),s(7),s(10),s(6),s(5),s(2),s(3),s(4),AFRAME.registerComponent("super-hands",{schema:{colliderState:{default:"collided"},colliderEvent:{default:"hit"},colliderEventProperty:{default:"el"},colliderEndEvent:{default:""},colliderEndEventProperty:{default:""},grabStartButtons:{default:["gripdown","trackpaddown","triggerdown","gripclose","pointup","thumbup","pointingstart","pistolstart","thumbstickdown","mousedown","touchstart"]},grabEndButtons:{default:["gripup","trackpadup","triggerup","gripopen","pointdown","thumbdown","pointingend","pistolend","thumbstickup","mouseup","touchend"]},stretchStartButtons:{default:["gripdown","trackpaddown","triggerdown","gripclose","pointup","thumbup","pointingstart","pistolstart","thumbstickdown","mousedown","touchstart"]},stretchEndButtons:{default:["gripup","trackpadup","triggerup","gripopen","pointdown","thumbdown","pointingend","pistolend","thumbstickup","mouseup","touchend"]},dragDropStartButtons:{default:["gripdown","trackpaddown","triggerdown","gripclose","pointup","thumbup","pointingstart","pistolstart","thumbstickdown","mousedown","touchstart"]},dragDropEndButtons:{default:["gripup","trackpadup","triggerup","gripopen","pointdown","thumbdown","pointingend","pistolend","thumbstickup","mouseup","touchend"]}},multiple:!1,init:function(){this.HOVER_EVENT="hover-start",this.UNHOVER_EVENT="hover-end",this.GRAB_EVENT="grab-start",this.UNGRAB_EVENT="grab-end",this.STRETCH_EVENT="stretch-start",this.UNSTRETCH_EVENT="stretch-end",this.DRAG_EVENT="drag-start",this.UNDRAG_EVENT="drag-end",this.DRAGOVER_EVENT="dragover-start",this.UNDRAGOVER_EVENT="dragover-end",this.DRAGDROP_EVENT="drag-drop",this.otherSuperHand=null,this.gehDragged=new Set,this.gehClicking=new Set,this.hoverEls=[],this.state=new Map,this.dragging=!1,this.unHover=this.unHover.bind(this),this.unWatch=this.unWatch.bind(this),this.onHit=this.onHit.bind(this),this.onGrabStartButton=this.onGrabStartButton.bind(this),this.onGrabEndButton=this.onGrabEndButton.bind(this),this.onStretchStartButton=this.onStretchStartButton.bind(this),this.onStretchEndButton=this.onStretchEndButton.bind(this),this.onDragDropStartButton=this.onDragDropStartButton.bind(this),this.onDragDropEndButton=this.onDragDropEndButton.bind(this),this.system.registerMe(this)},update:function(t){this.unRegisterListeners(t),this.registerListeners()},remove:function(){var t=this;this.system.unregisterMe(this),this.unRegisterListeners(),this.hoverEls.forEach(function(e){e.removeEventListener("stateremoved",t.unWatch)}),this.hoverEls.length=0,this.state.get(this.HOVER_EVENT)&&this._unHover(this.state.get(this.HOVER_EVENT)),this.onGrabEndButton(),this.onStretchEndButton(),this.onDragDropEndButton()},pause:function(){},play:function(){},onGrabStartButton:function(t){var e=this.state.get(this.GRAB_EVENT);this.dispatchMouseEventAll("mousedown",this.el),this.gehClicking=new Set(this.hoverEls),e||(e=this.findTarget(this.GRAB_EVENT,{hand:this.el,buttonEvent:t}),e&&(this.state.set(this.GRAB_EVENT,e),this._unHover(e)))},onGrabEndButton:function(t){var e=this,s=this.hoverEls.filter(function(t){return e.gehClicking.has(t)}),i=this.state.get(this.GRAB_EVENT),n={hand:this.el,buttonEvent:t};this.dispatchMouseEventAll("mouseup",this.el);for(var r=0;r<s.length;r++)this.dispatchMouseEvent(s[r],"click",this.el);this.gehClicking.clear(),i&&!this.emitCancelable(i,this.UNGRAB_EVENT,n)&&(this.promoteHoveredEl(this.state.get(this.GRAB_EVENT)),this.state.delete(this.GRAB_EVENT),this.hover())},onStretchStartButton:function(t){var e=this.state.get(this.STRETCH_EVENT);e||(e=this.findTarget(this.STRETCH_EVENT,{hand:this.el,buttonEvent:t}),e&&(this.state.set(this.STRETCH_EVENT,e),this._unHover(e)))},onStretchEndButton:function(t){var e=this.state.get(this.STRETCH_EVENT),s={hand:this.el,buttonEvent:t};e&&!this.emitCancelable(e,this.UNSTRETCH_EVENT,s)&&(this.promoteHoveredEl(e),this.state.delete(this.STRETCH_EVENT),this.hover())},onDragDropStartButton:function(t){var e=this.state.get(this.DRAG_EVENT);this.dragging=!0,this.hoverEls.length&&(this.gehDragged=new Set(this.hoverEls),this.dispatchMouseEventAll("dragstart",this.el)),e||(e=this.state.get(this.GRAB_EVENT)&&!this.emitCancelable(this.state.get(this.GRAB_EVENT),this.DRAG_EVENT,{hand:this.el,buttonEvent:t})?this.state.get(this.GRAB_EVENT):this.findTarget(this.DRAG_EVENT,{hand:this.el,buttonEvent:t}),e&&(this.state.set(this.DRAG_EVENT,e),this._unHover(e)))},onDragDropEndButton:function(t){var e=this,s=this.state.get(this.DRAG_EVENT);if(this.dragging=!1,this.gehDragged.forEach(function(t){e.dispatchMouseEvent(t,"dragend",e.el),e.dispatchMouseEventAll("drop",t,!0,!0),e.dispatchMouseEventAll("dragleave",t,!0,!0)}),this.gehDragged.clear(),s){var i={hand:this.el,dropped:s,on:null,buttonEvent:t},n={hand:this.el,buttonEvent:t},r=this.findTarget(this.DRAGDROP_EVENT,i,!0);r&&(i.on=r,this.emitCancelable(s,this.DRAGDROP_EVENT,i),this._unHover(r)),this.emitCancelable(s,this.UNDRAG_EVENT,n)||(this.promoteHoveredEl(s),this.state.delete(this.DRAG_EVENT),this.hover())}},onHit:function(t){var e=this,s=t.detail[this.data.colliderEventProperty],i=function(t){var s=void 0;s=e.hoverEls.indexOf(t),s===-1&&(e.hoverEls.push(t),t.addEventListener("stateremoved",e.unWatch),e.dispatchMouseEvent(t,"mouseover",e.el),e.dragging&&e.gehDragged.size&&e.gehDragged.forEach(function(t){e.dispatchMouseEventAll("dragenter",t,!0,!0)}),e.hover())};s&&(Array.isArray(s)?s.forEach(i):i(s))},hover:function(){var t,e;this.state.has(this.HOVER_EVENT)&&this._unHover(this.state.get(this.HOVER_EVENT),!0),this.state.has(this.DRAGOVER_EVENT)&&this._unHover(this.state.get(this.DRAGOVER_EVENT),!0),this.dragging&&this.state.get(this.DRAG_EVENT)&&(t={hand:this.el,hovered:e,carried:this.state.get(this.DRAG_EVENT)},e=this.findTarget(this.DRAGOVER_EVENT,t,!0),e&&(e.addEventListener("stateremoved",this.unHover),this.emitCancelable(this.state.get(this.DRAG_EVENT),this.DRAGOVER_EVENT,t),this.state.set(this.DRAGOVER_EVENT,e))),this.state.has(this.DRAGOVER_EVENT)||(e=this.findTarget(this.HOVER_EVENT,{hand:this.el},!0),e&&(e.addEventListener("stateremoved",this.unHover),this.state.set(this.HOVER_EVENT,e)))},unHover:function(t){var e=t.detail[this.data.colliderEndEventProperty];e?this._unHover(e):t.detail.state===this.data.colliderState&&this._unHover(t.target)},_unHover:function(t,e){var s=!1,i=void 0;t.removeEventListener("stateremoved",this.unHover),t===this.state.get(this.DRAGOVER_EVENT)&&(this.state.delete(this.DRAGOVER_EVENT),s=!0,i={hand:this.el,hovered:t,carried:this.state.get(this.DRAG_EVENT)},this.emitCancelable(t,this.UNDRAGOVER_EVENT,i),this.state.has(this.DRAG_EVENT)&&this.emitCancelable(this.state.get(this.DRAG_EVENT),this.UNDRAGOVER_EVENT,i)),t===this.state.get(this.HOVER_EVENT)&&(this.state.delete(this.HOVER_EVENT),s=!0,this.emitCancelable(t,this.UNHOVER_EVENT,{hand:this.el})),s&&!e&&this.hover()},unWatch:function(t){var e=t.detail[this.data.colliderEndEventProperty];e?this._unWatch(e):t.detail.state===this.data.colliderState&&this._unWatch(t.target)},_unWatch:function(t){var e=this,s=this.hoverEls.indexOf(t);t.removeEventListener("stateremoved",this.unWatch),s!==-1&&this.hoverEls.splice(s,1),this.gehDragged.forEach(function(s){e.dispatchMouseEvent(t,"dragleave",s),e.dispatchMouseEvent(s,"dragleave",t)}),this.dispatchMouseEvent(t,"mouseout",this.el)},registerListeners:function(){var t=this;this.el.addEventListener(this.data.colliderEvent,this.onHit),this.el.addEventListener(this.data.colliderEndEvent,this.unWatch),this.el.addEventListener(this.data.colliderEndEvent,this.unHover),this.data.grabStartButtons.forEach(function(e){t.el.addEventListener(e,t.onGrabStartButton)}),this.data.grabEndButtons.forEach(function(e){t.el.addEventListener(e,t.onGrabEndButton)}),this.data.stretchStartButtons.forEach(function(e){t.el.addEventListener(e,t.onStretchStartButton)}),this.data.stretchEndButtons.forEach(function(e){t.el.addEventListener(e,t.onStretchEndButton)}),this.data.dragDropStartButtons.forEach(function(e){t.el.addEventListener(e,t.onDragDropStartButton)}),this.data.dragDropEndButtons.forEach(function(e){t.el.addEventListener(e,t.onDragDropEndButton)})},unRegisterListeners:function(t){var e=this;t=t||this.data,0!==Object.keys(t).length&&(this.el.removeEventListener(t.colliderEvent,this.onHit),this.el.removeEventListener(t.colliderEndEvent,this.unHover),this.el.removeEventListener(t.colliderEndEvent,this.unWatch),t.grabStartButtons.forEach(function(t){e.el.removeEventListener(t,e.onGrabStartButton)}),t.grabEndButtons.forEach(function(t){e.el.removeEventListener(t,e.onGrabEndButton)}),t.stretchStartButtons.forEach(function(t){e.el.removeEventListener(t,e.onStretchStartButton)}),t.stretchEndButtons.forEach(function(t){e.el.removeEventListener(t,e.onStretchEndButton)}),t.dragDropStartButtons.forEach(function(t){e.el.removeEventListener(t,e.onDragDropStartButton)}),t.dragDropEndButtons.forEach(function(t){e.el.removeEventListener(t,e.onDragDropEndButton)}))},emitCancelable:function(t,e,s){var i,n;return s=s||{},i={bubbles:!0,cancelable:!0,detail:s},i.detail.target=i.detail.target||t,n=new window.CustomEvent(e,i),t.dispatchEvent(n)},dispatchMouseEvent:function(t,e,s){var i=new window.MouseEvent(e,{relatedTarget:s});t.dispatchEvent(i)},dispatchMouseEventAll:function(t,e,s,i){var n=this,r=this.hoverEls;if(s&&(r=r.filter(function(t){return t!==n.state.get(n.GRAB_EVENT)&&t!==n.state.get(n.DRAG_EVENT)&&t!==n.state.get(n.STRETCH_EVENT)&&!n.gehDragged.has(t)})),i)for(var a=0;a<r.length;a++)this.dispatchMouseEvent(r[a],t,e),this.dispatchMouseEvent(e,t,r[a]);else for(var h=0;h<r.length;h++)this.dispatchMouseEvent(r[h],t,e)},findTarget:function(t,e,s){var i,n=this,r=this.hoverEls;for(s&&(r=r.filter(function(t){return t!==n.state.get(n.GRAB_EVENT)&&t!==n.state.get(n.DRAG_EVENT)&&t!==n.state.get(n.STRETCH_EVENT)})),i=r.length-1;i>=0;i--)if(!this.emitCancelable(r[i],t,e))return r[i];return null},promoteHoveredEl:function(t){var e=this.hoverEls.indexOf(t);e!==-1&&(this.hoverEls.splice(e,1),this.hoverEls.push(t))}})},function(t,e){"use strict";t.exports=function(){function t(t,e){return 0===e.length||e.indexOf(t.detail.buttonEvent.type)!==-1}return{schema:{startButtons:{default:[]},endButtons:{default:[]}},startButtonOk:function(e){return t(e,this.data.startButtons)},endButtonOk:function(e){return t(e,this.data.endButtons)}}}()},function(t,e){"use strict";AFRAME.registerComponent("locomotor-auto-config",{schema:{camera:{default:!0},stretch:{default:!0},move:{default:!0}},dependencies:["grabbable","stretchable"],init:function(){if(this.ready=!1,this.data.camera&&!document.querySelector("a-camera, [camera]")){var t=document.createElement("a-camera");this.el.appendChild(t)}this.fakeCollisions(),this.fakeCollisionsB=this.fakeCollisions.bind(this),this.el.addEventListener("controllerconnected",this.fakeCollisionsB)},update:function(){this.el.getAttribute("stretchable")&&!this.data.stretch?(this.stretchSet=this.el.getAttribute("stretchable"),this.el.removeAttribute("stretchable")):!this.el.getAttribute("stretchable")&&this.data.stretch&&this.el.setAttribute("stretchable",this.stretchSet),this.el.getAttribute("grabbable")&&!this.data.move?(this.grabSet=this.el.getAttribute("grabbable"),this.el.removeAttribute("grabbable")):!this.el.getAttribute("grabbable")&&this.data.move&&this.el.setAttribute("grabbable",this.grabSet)},remove:function(){this.el.removeState(this.colliderState),this.el.removeEventListener("controllerconnected",this.fakeCollisionsB)},announceReady:function(){this.ready||(this.ready=!0,this.el.emit("locomotor-ready",{}))},fakeCollisions:function(){var t=this;this.el.getChildEntities().forEach(function(e){var s=e.getAttribute("super-hands");if(s){var i={};i[s.colliderEventProperty]=t.el,e.emit(s.colliderEvent,i),t.colliderState=s.colliderState,t.el.addState(t.colliderState)}t.announceReady()})}})},function(t,e){"use strict";AFRAME.registerComponent("progressive-controls",{schema:{maxLevel:{default:"touch",oneOf:["gaze","point","touch"]},objects:{default:""},physicsBody:{default:"shape: sphere; sphereRadius: 0.02"},touchCollider:{default:"sphere-collider"}},init:function(){var t=this;this.levels=["gaze","point","touch"],this.currentLevel=0,this.superHandsRaycasterConfig={colliderEvent:"raycaster-intersection",colliderEventProperty:"els",colliderEndEvent:"raycaster-intersection-cleared",colliderEndEventProperty:"el",colliderState:""},this.camera=this.el.querySelector("a-camera,[camera]")||this.el.appendChild(document.createElement("a-camera")),["left","right"].forEach(function(e){t[e]=t.el.querySelector("."+e+"-controller")||t.el.appendChild(document.createElement("a-entity")),t[e].classList&&t[e].classList.add(e+"-controller"),t[e].setAttribute("laser-controls","hand: "+e),t[e+"shOriginal"]=t[e].getAttribute("super-hands")||{},"string"==typeof t[e+"shOriginal"]&&(t[e+"shOriginal"]=AFRAME.utils.styleParser.parse(t[e+"shOriginal"]))}),this.el.addEventListener("controllerconnected",function(e){return t.detectLevel(e)}),this.eventRepeaterB=this.eventRepeater.bind(this),this.addEventListeners()},update:function(t){var e=this.currentLevel;this.currentLevel=-1,this.setLevel(e)},remove:function(){if(this.eventsRegistered){var t=this.el.sceneEl.canvas;t.removeEventListener("mousedown",this.eventRepeaterB),t.removeEventListener("mouseup",this.eventRepeaterB),t.removeEventListener("touchstart",this.eventRepeaterB),t.removeEventListener("touchend",this.eventRepeaterB)}},setLevel:function(t){var e=this,s=this.levels.indexOf(this.data.maxLevel),i=!!this.el.sceneEl.getAttribute("physics"),n=[this.right,this.left];if(t=t>s?s:t,t!==this.currentLevel){switch(0!==t&&this.caster&&(this.camera.removeChild(this.caster),this.caster=null,this.camera.removeAttribute("super-hands")),t){case 0:this.caster=this.camera.querySelector("[raycaster]"),this.caster||(this.caster=document.createElement("a-entity"),this.camera.appendChild(this.caster),this.caster.setAttribute("geometry","primitive: ring;radiusOuter: 0.008; radiusInner: 0.005; segmentsTheta: 32"),this.caster.setAttribute("material","color: #000; shader: flat;"),this.caster.setAttribute("position","0 0 -0.5")),this.caster.setAttribute("raycaster","objects: "+this.data.objects),this.camera.setAttribute("super-hands",this.superHandsRaycasterConfig),i&&this.camera.setAttribute("static-body",this.data.physicsBody);break;case 1:n.forEach(function(t){t.setAttribute("super-hands",e.superHandsRaycasterConfig),t.setAttribute("raycaster","objects: "+e.data.objects),i&&t.setAttribute("static-body",e.data.physicsBody)});break;case 2:["right","left"].forEach(function(t){e[t].setAttribute("super-hands",e[t+"shOriginal"],!0),e[t].setAttribute(e.data.touchCollider,"objects: "+e.data.objects),i&&e[t].setAttribute("static-body",e.data.physicsBody)})}this.currentLevel=t,this.el.emit("controller-progressed",{level:this.levels[this.currentLevel]})}},detectLevel:function(t){var e=["vive-controls","oculus-touch-controls","windows-motion-controls"],s=["gearvr-controls","daydream-controls"];this.controllerName=t.detail.name,e.indexOf(t.detail.name)!==-1?this.setLevel(this.levels.indexOf("touch")):s.indexOf(t.detail.name)!==-1?this.setLevel(this.levels.indexOf("point")):this.setLevel(this.levels.indexOf("gaze"))},eventRepeater:function(t){t.type.startsWith("touch")&&t.preventDefault&&(t.preventDefault(),"touchmove"===t.type)||this.camera.emit(t.type,t.detail)},addEventListeners:function(){return this.el.sceneEl.canvas?(this.el.sceneEl.canvas.addEventListener("mousedown",this.eventRepeaterB),this.el.sceneEl.canvas.addEventListener("mouseup",this.eventRepeaterB),this.el.sceneEl.canvas.addEventListener("touchstart",this.eventRepeaterB),this.el.sceneEl.canvas.addEventListener("touchmove",this.eventRepeaterB),this.el.sceneEl.canvas.addEventListener("touchend",this.eventRepeaterB),void(this.eventsRegistered=!0)):void this.el.sceneEl.addEventListener("loaded",this.addEventListeners.bind(this))}})},function(t,e){"use strict";var s=AFRAME.utils.extendDeep,i=AFRAME.primitives.getMeshMixin();AFRAME.registerPrimitive("a-locomotor",s({},i,{defaultComponents:{grabbable:{usePhysics:"never",invert:!0,suppressY:!0},stretchable:{invert:!0},"locomotor-auto-config":{}},mappings:{"fetch-camera":"locomotor-auto-config.camera","allow-movement":"locomotor-auto-config.move","horizontal-only":"grabbable.suppressY","allow-scaling":"locomotor-auto-config.stretch"}}))},function(t,e,s){"use strict";var i=s(1);AFRAME.registerComponent("clickable",AFRAME.utils.extendDeep({},i,{schema:{onclick:{type:"string"}},init:function(){this.CLICKED_STATE="clicked",this.CLICK_EVENT="grab-start",this.UNCLICK_EVENT="grab-end",this.clickers=[],this.start=this.start.bind(this),this.end=this.end.bind(this),this.el.addEventListener(this.CLICK_EVENT,this.start),this.el.addEventListener(this.UNCLICK_EVENT,this.end)},remove:function(){this.el.removeEventListener(this.CLICK_EVENT,this.start),this.el.removeEventListener(this.UNCLICK_EVENT,this.end)},start:function(t){this.startButtonOk(t)&&(this.el.addState(this.CLICKED_STATE),this.clickers.indexOf(t.detail.hand)===-1&&(this.clickers.push(t.detail.hand),t.preventDefault&&t.preventDefault()))},end:function(t){var e=this.clickers.indexOf(t.detail.hand);this.endButtonOk(t)&&(e!==-1&&this.clickers.splice(e,1),this.clickers.length<1&&this.el.removeState(this.CLICKED_STATE),t.preventDefault&&t.preventDefault())}}))},function(t,e,s){"use strict";var i=AFRAME.utils.extendDeep,n=s(1);AFRAME.registerComponent("drag-droppable",i({},n,{init:function(){this.HOVERED_STATE="dragover",this.DRAGGED_STATE="dragged",this.HOVER_EVENT="dragover-start",this.UNHOVER_EVENT="dragover-end",this.DRAG_EVENT="drag-start",this.UNDRAG_EVENT="drag-end",this.DRAGDROP_EVENT="drag-drop",this.hoverStart=this.hoverStart.bind(this),this.dragStart=this.dragStart.bind(this),this.hoverEnd=this.hoverEnd.bind(this),this.dragEnd=this.dragEnd.bind(this),this.dragDrop=this.dragDrop.bind(this),this.el.addEventListener(this.HOVER_EVENT,this.hoverStart),this.el.addEventListener(this.DRAG_EVENT,this.dragStart),this.el.addEventListener(this.UNHOVER_EVENT,this.hoverEnd),this.el.addEventListener(this.UNDRAG_EVENT,this.dragEnd),this.el.addEventListener(this.DRAGDROP_EVENT,this.dragDrop)},remove:function(){this.el.removeEventListener(this.HOVER_EVENT,this.hoverStart),this.el.removeEventListener(this.DRAG_EVENT,this.dragStart),this.el.removeEventListener(this.UNHOVER_EVENT,this.hoverEnd),this.el.removeEventListener(this.UNDRAG_EVENT,this.dragEnd),this.el.removeEventListener(this.DRAGDROP_EVENT,this.dragDrop)},hoverStart:function(t){this.el.addState(this.HOVERED_STATE),t.preventDefault&&t.preventDefault()},dragStart:function(t){this.startButtonOk(t)&&(this.el.addState(this.DRAGGED_STATE),t.preventDefault&&t.preventDefault())},hoverEnd:function(t){this.el.removeState(this.HOVERED_STATE)},dragEnd:function(t){this.endButtonOk(t)&&(this.el.removeState(this.DRAGGED_STATE),t.preventDefault&&t.preventDefault())},dragDrop:function(t){this.endButtonOk(t)&&t.preventDefault&&t.preventDefault()}}))},function(t,e,s){"use strict";var i=AFRAME.utils.extendDeep,n=s(9),r=s(1);AFRAME.registerComponent("grabbable",i({},n,r,{schema:{maxGrabbers:{type:"int",default:NaN},invert:{default:!1},suppressY:{default:!1}},init:function(){var t=this;this.GRABBED_STATE="grabbed",this.GRAB_EVENT="grab-start",this.UNGRAB_EVENT="grab-end",this.grabbed=!1,this.grabbers=[],this.constraints=new Map,this.deltaPositionIsValid=!1,this.grabDistance=void 0,this.grabDirection={x:0,y:0,z:-1},this.grabOffset={x:0,y:0,z:0},this.destPosition={x:0,y:0,z:0},this.physicsInit(),this.el.addEventListener(this.GRAB_EVENT,function(e){return t.start(e)}),this.el.addEventListener(this.UNGRAB_EVENT,function(e){return t.end(e)}),this.el.addEventListener("mouseout",function(e){return t.lostGrabber(e)})},update:function(){this.physicsUpdate(),this.xFactor=this.data.invert?-1:1,this.zFactor=this.data.invert?-1:1,this.yFactor=(this.data.invert?-1:1)*!this.data.suppressY},tick:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){var s;this.grabber&&(e.copy(this.grabDirection),e.applyQuaternion(this.grabber.object3D.getWorldQuaternion()).setLength(this.grabDistance).add(this.grabber.object3D.getWorldPosition()).add(this.grabOffset),this.deltaPositionIsValid?(t.sub(e),s=this.el.getAttribute("position"),this.destPosition.x=s.x-t.x*this.xFactor,this.destPosition.y=s.y-t.y*this.yFactor,this.destPosition.z=s.z-t.z*this.zFactor,this.el.setAttribute("position",this.destPosition)):this.deltaPositionIsValid=!0,t.copy(e))}}(),remove:function(){this.el.removeEventListener(this.GRAB_EVENT,this.start),this.el.removeEventListener(this.UNGRAB_EVENT,this.end),this.physicsRemove()},start:function(t){if(this.startButtonOk(t)){var e=!Number.isFinite(this.data.maxGrabbers)||this.grabbers.length<this.data.maxGrabbers;if(this.grabbers.indexOf(t.detail.hand)===-1&&e){if(!t.detail.hand.object3D)return void console.warn("grabbable entities must have an object3D");this.grabbers.push(t.detail.hand),this.physicsStart(t)||this.grabber||(this.grabber=t.detail.hand,this.resetGrabber()),t.preventDefault&&t.preventDefault(),this.grabbed=!0,this.el.addState(this.GRABBED_STATE)}}},end:function(t){var e=this.grabbers.indexOf(t.detail.hand);this.endButtonOk(t)&&(e!==-1&&(this.grabbers.splice(e,1),this.grabber=this.grabbers[0]),this.physicsEnd(t),this.resetGrabber()||(this.grabbed=!1,this.el.removeState(this.GRABBED_STATE)),t.preventDefault&&t.preventDefault())},resetGrabber:function(){var t=void 0;return!!this.grabber&&(t=this.grabber.getAttribute("raycaster"),this.deltaPositionIsValid=!1,this.grabDistance=this.el.object3D.getWorldPosition().distanceTo(this.grabber.object3D.getWorldPosition()),t&&(this.grabDirection=t.direction,this.grabOffset=t.origin),!0)},lostGrabber:function(t){var e=this.grabbers.indexOf(t.relatedTarget);e===-1||t.relatedTarget===this.grabber||this.physicsIsConstrained(t.relatedTarget)||this.grabbers.splice(e,1)}}))},function(t,e){"use strict";AFRAME.registerComponent("hoverable",{init:function(){this.HOVERED_STATE="hovered",this.HOVER_EVENT="hover-start",this.UNHOVER_EVENT="hover-end",this.hoverers=[],this.start=this.start.bind(this),this.end=this.end.bind(this),this.el.addEventListener(this.HOVER_EVENT,this.start),this.el.addEventListener(this.UNHOVER_EVENT,this.end)},remove:function(){this.el.removeEventListener(this.HOVER_EVENT,this.start),this.el.removeEventListener(this.UNHOVER_EVENT,this.end)},start:function(t){this.el.addState(this.HOVERED_STATE),this.hoverers.indexOf(t.detail.hand)===-1&&this.hoverers.push(t.detail.hand),t.preventDefault&&t.preventDefault()},end:function(t){var e=this.hoverers.indexOf(t.detail.hand);e!==-1&&this.hoverers.splice(e,1),this.hoverers.length<1&&this.el.removeState(this.HOVERED_STATE)}})},function(t,e){"use strict";t.exports={schema:{usePhysics:{default:"ifavailable"}},physicsInit:function(){this.constraints=new Map},physicsUpdate:function(){"never"===this.data.usePhysics&&this.constraints.size&&this.physicsClear()},physicsRemove:function(){this.physicsClear()},physicsStart:function(t){if("never"!==this.data.usePhysics&&this.el.body&&t.detail.hand.body&&!this.constraints.has(t.detail.hand)){var e=new window.CANNON.LockConstraint(this.el.body,t.detail.hand.body);return this.el.body.world.addConstraint(e),this.constraints.set(t.detail.hand,e),!0}return!1},physicsEnd:function(t){var e=this.constraints.get(t.detail.hand);e&&(this.el.body.world.removeConstraint(e),this.constraints.delete(t.detail.hand))},physicsClear:function(){if(this.el.body){var t=!0,e=!1,s=void 0;try{for(var i,n=this.constraints.values()[Symbol.iterator]();!(t=(i=n.next()).done);t=!0){var r=i.value;this.el.body.world.removeConstraint(r)}}catch(t){e=!0,s=t}finally{try{!t&&n.return&&n.return()}finally{if(e)throw s}}}this.constraints.clear()},physicsIsConstrained:function(t){return this.constraints.has(t)},physicsIsGrabbing:function(){return this.constraints.size>0}}},function(t,e,s){"use strict";var i=AFRAME.utils.extendDeep,n=s(1);AFRAME.registerComponent("stretchable",i({},n,{schema:{usePhysics:{default:"ifavailable"},invert:{default:!1}},init:function(){this.STRETCHED_STATE="stretched",this.STRETCH_EVENT="stretch-start",this.UNSTRETCH_EVENT="stretch-end",this.stretched=!1,this.stretchers=[],this.start=this.start.bind(this),this.end=this.end.bind(this),this.el.addEventListener(this.STRETCH_EVENT,this.start),this.el.addEventListener(this.UNSTRETCH_EVENT,this.end)},update:function(t){},tick:function(){var t=new THREE.Vector3,e=new THREE.Vector3,s=new THREE.Vector3;return function(){if(this.stretched){t.copy(this.el.getAttribute("scale")),e.copy(this.stretchers[0].getAttribute("position")),s.copy(this.stretchers[1].getAttribute("position"));var i=e.distanceTo(s),n=1;if(null!==this.previousStretch&&0!==i&&(n=Math.pow(i/this.previousStretch,this.data.invert?-1:1)),this.previousStretch=i,t.multiplyScalar(n),this.el.setAttribute("scale",t),this.el.body&&"never"!==this.data.usePhysics){var r=this.el.body.shapes[0];r.halfExtents?(r.halfExtents.scale(n,r.halfExtents),r.updateConvexPolyhedronRepresentation()):r.radius?(r.radius*=n,r.updateBoundingSphereRadius()):this.shapeWarned||(console.warn("Unable to stretch physics body: unsupported shape"),this.shapeWarned=!0),this.el.body.updateBoundingRadius()}}}}(),remove:function(){this.el.removeEventListener(this.STRETCH_EVENT,this.start),this.el.removeEventListener(this.UNSTRETCH_EVENT,this.end)},start:function(t){this.stretched||this.stretchers.includes(t.detail.hand)||!this.startButtonOk(t)||(this.stretchers.push(t.detail.hand),2===this.stretchers.length&&(this.stretched=!0,this.previousStretch=null,this.el.addState(this.STRETCHED_STATE)),t.preventDefault&&t.preventDefault())},end:function(t){var e=this.stretchers.indexOf(t.detail.hand);this.endButtonOk(t)&&(e!==-1&&(this.stretchers.splice(e,1),this.stretched=!1,this.el.removeState(this.STRETCHED_STATE)),t.preventDefault&&t.preventDefault())}}))},function(t,e){"use strict";AFRAME.registerSystem("super-hands",{init:function(){this.superHands=[]},registerMe:function(t){1===this.superHands.length&&(this.superHands[0].otherSuperHand=t,t.otherSuperHand=this.superHands[0]),this.superHands.push(t)},unregisterMe:function(t){var e=this.superHands.indexOf(t);e!==-1&&this.superHands.splice(e,1),this.superHands.forEach(function(e){e.otherSuperHand===t&&(e.otherSuperHand=null)})}})}]);